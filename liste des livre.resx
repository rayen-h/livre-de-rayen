<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>